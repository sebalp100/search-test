// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  email      String      @unique
  username   String      @unique
  password   String
  avatar     String?
  urls       Url[]      
  createdAt  DateTime    @default(now())
}

model Url {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  url        String
  images     Image[]    
  videos     Video[]     
  textInfo   TextInfo[] 
  createdAt  DateTime    @default(now())
  createdBy  User        @relation(fields: [userId], references: [id])
  userId     String      @unique @db.ObjectId
}

model Image {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl   String
  metadata   ImageMetadata?
  createdAt  DateTime      @default(now())
  url        Url           @relation(fields: [urlId], references: [id])
  urlId      String        @db.ObjectId
}


model Video {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  videoUrl   String
  createdAt  DateTime      @default(now())
  url        Url           @relation(fields: [urlId], references: [id])
  urlId      String        @db.ObjectId
}

model TextInfo {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  createdAt  DateTime    @default(now())
  url        Url         @relation(fields: [urlId], references: [id])
  urlId      String      @db.ObjectId
}

model ImageMetadata {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  imageHeight   Int?
  imageWidth    Int?
  fileType      String?
  image         Image?    @relation(fields: [imageId], references: [id])
  imageId       String?   @unique @db.ObjectId
}
